{"Name":"Animated Circle Loading View","Id":2966,"Alias":"AnimatedCircleLoadingView","Description":"\nAdd `AnimatedCircleLoadingView` to your layout and define `mainColor` and `secondaryColor` as custom \nattributes:\n\n    \u003ccom.github.jlmd.animatedcircleloadingview.AnimatedCircleLoadingView\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/circle_loading_view\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"250dp\"\n        android:background=\"@color/background\"\n        android:layout_centerInParent=\"true\"\n        app:mainColor=\"@color/main_color\"\n        app:secondaryColor=\"@color/secondary_color\"\n        /\u003e\n\n## Determinate Usage\n\nStart determinate:\n\n    animatedCircleLoadingView.StartDeterminate();\n\nModify percent:\n\n    animatedCircleLoadingView.SetPercent(10);\n\nIf percent is 100, the animation ends with success animation.  \nOn error you must invoke the `StopFailure` method, then the application ends with failure animation.\n\n## Indeterminate Usage\n\nStart indeterminate:\n\n    animatedCircleLoadingView.StartIndeterminate();\n\nStop with success:\n\n    animatedCircleLoadingView.StopOk();\n\nStop with failure:\n\n    animatedCircleLoadingView.StopFailure();\n\nReset loading:\n\n    animatedCircleLoadingView.ResetLoading();\n","Version":"1.1.2.1","Summary":"A determinate/indeterminate loading view animation.","QuickStart":"Add `AnimatedCircleLoadingView` to your layout and define `mainColor` and `secondaryColor` as custom \nattributes:\n\n    \u003ccom.github.jlmd.animatedcircleloadingview.AnimatedCircleLoadingView\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n        android:id=\"@+id/circle_loading_view\"\n        android:layout_width=\"250dp\"\n        android:layout_height=\"250dp\"\n        android:background=\"@color/background\"\n        android:layout_centerInParent=\"true\"\n        app:mainColor=\"@color/main_color\"\n        app:secondaryColor=\"@color/secondary_color\"\n        /\u003e\n\n## Determinate Usage\n\nStart determinate:\n\n    animatedCircleLoadingView.StartDeterminate();\n\nModify percent:\n\n    animatedCircleLoadingView.SetPercent(10);\n\nIf percent is 100, the animation ends with success animation.  \nOn error you must invoke the `StopFailure` method, then the application ends with failure animation.\n\n## Indeterminate Usage\n\nStart indeterminate:\n\n    animatedCircleLoadingView.StartIndeterminate();\n\nStop with success:\n\n    animatedCircleLoadingView.StopOk();\n\nStop with failure:\n\n    animatedCircleLoadingView.StopFailure();\n\nReset loading:\n\n    animatedCircleLoadingView.ResetLoading();\n","Hash":"04314ed4e97e661480887a6b66616ba0","TargetPlatforms":["android"],"TrialHash":null}